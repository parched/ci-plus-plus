x-poetry-install: &poetry-install
  - uses: actions/setup-python@v3
    with:
      python-version: "3.10"
  - run: |
      pip install poetry
      poetry install

on:
  pull_request:
  push:
#    targets:
#      - checks
#      - docs
#      - say-hi

jobs:
  checks:
    needs:
      - flake8
      - pylint
      - pytest
      - pyright

  docs:
    paths:
      - README.md # runs if the readme changes
    extra-key: something # also runs if this changes
    runs-on: ubuntu-20.04
    steps:
      - run: echo building docs from readme

  say-hi:
    runs-on: ubuntu-20.04
    paths: []
    force: true # always runs if needed by another job or by targets
    steps:
      - run: echo HI

  flake8:
    runs-on: ubuntu-20.04
    steps:
      - *poetry-install
      - run: poetry run flake8

  pyright:
    runs-on: ubuntu-20.04
    steps:
      - *poetry-install
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - run: npm install -g pyright@1.1.234
      - run: poetry run pyright

  pylint:
    runs-on: ubuntu-20.04
    steps:
      - *poetry-install
      - run: poetry run pylint src tests

  pytest:
    runs-on: ubuntu-20.04
    steps:
      - *poetry-install
      - run: poetry run pytest

  build:
    runs-on: ubuntu-20.04
    steps:
      - *poetry-install
      - run: poetry build
    output-paths:
      - dist/

  check-self:
    runs-on: ubuntu-20.04
    paths:
      - .ci++/
      - .github/workflows/
    needs:
      - build
    steps:
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - run: |
          pip install cixx --find-links dist/
          ci++ ".ci++/main.yml" ".github/workflows/main.yml.new"
          diff ".github/workflows/main.yml.new" ".github/workflows/main.yml"
